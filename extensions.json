[
  {
    "title": "Auth0 Authorization",
    "name": "auth0-authz",
    "version": "2.0.1",
    "author": "auth0",
    "description": "This extension gives Auth0 customers the possibility to manage group memberships for their users.",
    "type": "application",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-authz/assets/logo.svg",
    "initialUrlPath": "/login",
    "uninstallConfirmMessage": "You are about to uninstall the \"Authorization Extension\". If you proceed all your data in this extension will be lost. Do you want to continue?",
    "repository": "https://github.com/auth0/auth0-authz",
    "keywords": [
      "auth0",
      "extension"
    ],
    "auth0": {
      "createClient": true,
      "onUninstallPath": "/.extensions/on-uninstall",
      "onUpdatePath": "/.extensions/on-update",
      "scopes": "read:resource_servers update:resource_servers delete:resource_servers read:clients delete:clients read:users read:rules create:rules update:rules delete:rules"
    }
  },
  {
    "title": "Custom Social Connections",
    "name": "custom-social-connections",
    "version": "1.1.9",
    "author": "auth0",
    "description": "This application gives Auth0 customers the possibility to manage custom social connections in an easy way",
    "type": "application",
    "category": "admin",
    "logoUrl": "https://cdn.auth0.com/extensions/custom-social-connections/assets/logo.svg",
    "repository": "https://github.com/auth0/custom-social-connections",
    "docsUrl": "https://auth0.com/docs/extensions/custom-social-extensions",
    "keywords": [
      "auth0",
      "extension",
      "social"
    ]
  },
  {
    "title": "GitHub Deployments",
    "name": "auth0-github-deploy",
    "version": "2.0.4",
    "author": "auth0",
    "description": "This extension gives Auth0 customers the possibility to deploy Pages, Rules and Custom Database Connections from GitHub.",
    "type": "application",
    "category": "source_control",
    "docsUrl": "https://auth0.com/docs/extensions/github-deploy",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-github-deploy/assets/logo.svg",
    "initialUrlPath": "/login",
    "uninstallConfirmMessage": "Do you really want to uninstall this extension? Doing so will stop any Pages, Rules and Database Connection scripts from being deployed from GitHub to Auth0",
    "repository": "https://github.com/auth0-extensions/auth0-github-deploy",
    "keywords": [
      "auth0",
      "extension",
      "github"
    ],
    "auth0": {
      "createClient": true,
      "onUninstallPath": "/.extensions/on-uninstall",
      "scopes": "read:tenant_settings update:tenant_settings update:clients read:clients read:connections update:connections read:rules create:rules update:rules delete:rules delete:clients"
    },
    "secrets": {
      "GITHUB_REPOSITORY": {
        "example": "myorganization/myrepo",
        "description": "The repository from which you want to deploy rules and database scripts",
        "required": true
      },
      "GITHUB_BRANCH": {
        "description": "The branch we should monitor for commits",
        "default": "master",
        "required": true
      },
      "GITHUB_TOKEN": {
        "description": "Your personal access token for GitHub",
        "required": true,
        "type": "password"
      },
      "SLACK_INCOMING_WEBHOOK_URL": {
        "example": "https://hooks.slack.com/services/...",
        "description": "Webhook URL for Slack used to notify you of successful and failed deployments",
        "required": false
      }
    }
  },
  {
    "title": "GitLab Deployments",
    "name": "auth0-gitlab-deploy",
    "version": "2.0.1",
    "author": "auth0",
    "description": "This extension gives Auth0 customers the possibility to deploy Hosted Pages, Rules and Custom Database Connections from GitLab.",
    "type": "application",
    "category": "source_control",
    "docsUrl": "https://auth0.com/docs/extensions/gitlab-deploy",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-gitlab-deploy/assets/logo.svg",
    "initialUrlPath": "/login",
    "uninstallConfirmMessage": "Do you really want to uninstall this extension? Doing so will stop any Hosted Pages,  Rules and Database Connection scripts from being deployed from GitLab to Auth0",
    "repository": "https://github.com/auth0-extensions/auth0-gitlab-deploy",
    "keywords": [
      "auth0",
      "extension",
      "gitlab"
    ],
    "auth0": {
      "createClient": true,
      "onUninstallPath": "/.extensions/on-uninstall",
      "scopes": "read:tenant_settings update:tenant_settings update:clients read:clients read:connections update:connections read:rules create:rules update:rules delete:rules delete:clients"
    },
    "secrets": {
      "GITLAB_REPOSITORY": {
        "example": "myorganization/myrepo",
        "description": "The repository from which you want to deploy rules and database scripts",
        "required": true
      },
      "GITLAB_BRANCH": {
        "description": "The branch we should monitor for commits",
        "default": "master",
        "required": true
      },
      "GITLAB_TOKEN": {
        "description": "Your personal access token for GitLab",
        "required": true,
        "type": "password"
      },
      "SLACK_INCOMING_WEBHOOK_URL": {
        "example": "https://hooks.slack.com/services/...",
        "description": "Webhook URL for Slack used to notify you of successful and failed deployments",
        "required": false
      }
    }
  },
  {
    "title": "Visual Studio Team Services Deployments",
    "name": "auth0-visualstudio-deploy",
    "version": "2.0.2",
    "author": "auth0",
    "description": "This extension gives Auth0 customers the possibility to deploy Hosted Pages, Rules and Custom Database Connections from Visual Studio Team Services.",
    "type": "application",
    "category": "source_control",
    "docsUrl": "https://auth0.com/docs/extensions/visual-studio-team-services-deploy",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-visualstudio-deploy/assets/logo.svg",
    "initialUrlPath": "/login",
    "uninstallConfirmMessage": "Do you really want to uninstall this extension? Doing so will stop any Hosted Pages, Rules and Database Connection scripts from being deployed from Visual Studio Team Services to Auth0",
    "repository": "https://github.com/auth0-extensions/auth0-visualstudio-deploy",
    "keywords": [
      "auth0",
      "extension",
      "visualstudio"
    ],
    "auth0": {
      "createClient": true,
      "onUninstallPath": "/.extensions/on-uninstall",
      "scopes": "read:tenant_settings update:tenant_settings update:clients read:clients read:connections update:connections read:rules create:rules update:rules delete:rules delete:clients"
    },
    "secrets": {
      "TFS_TYPE": {
        "description": "Type of repository",
        "type": "select",
        "required": true,
        "default": "git",
        "allowMultiple": false,
        "options": [
          {
            "value": "git",
            "text": "Git"
          },
          {
            "value": "tfvc",
            "text": "TFVC"
          }
        ]
      },
      "TFS_PROJECT": {
        "example": "MyFirstProject",
        "description": "The project from which you want to deploy rules and database scripts",
        "required": true
      },
      "TFS_BRANCH": {
        "description": "The branch we should monitor for commits",
        "default": "master",
        "required": true,
        "visibleIf": {
          "TFS_TYPE": "git"
        }
      },
      "TFS_PATH": {
        "example": "$/myproject/somepath",
        "description": "The path we should monitor for commits",
        "visibleIf": {
          "TFS_TYPE": "tfvc"
        }
      },
      "TFS_INSTANCE": {
        "example": "INSTANCE.visualstudio.com",
        "description": "Your Visual Studio Team Services instance name (without .visualstudio.com)",
        "required": true
      },
      "TFS_COLLECTION": {
        "description": "Your visualstudio collection",
        "default": "DefaultCollection",
        "required": true
      },
      "TFS_USERNAME": {
        "description": "Your Visual Studio Team Services username",
        "required": true
      },
      "TFS_TOKEN": {
        "description": "Your personal access token for Visual Studio Team Services",
        "required": true,
        "type": "password"
      },
      "SLACK_INCOMING_WEBHOOK_URL": {
        "example": "https://hooks.slack.com/services/...",
        "description": "Webhook URL for Slack used to notify you of successful and failed deployments",
        "required": false
      }
    }
  },
  {
    "title": "Auth0 Management API Webhooks",
    "name": "auth0-webhooks",
    "version": "1.4.0",
    "author": "auth0",
    "description": "Allows you to define webhooks for Auth0's Management API. It will go through the audit logs and call a webhook for specific events.",
    "type": "cron",
    "category": "webhook",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-webhooks/assets/logo.svg",
    "repository": "https://github.com/auth0/auth0-management-api-webhooks",
    "docsUrl": "https://auth0.com/docs/extensions/management-api-webhooks",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "*/5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "AUTH0_API_ENDPOINTS": {
        "description": "Allows you to filter specific API endpoints, comma separated.",
        "example": "e.g.: users, connections, rules, logs, emails, stats, clients, tenants"
      },
      "WEBHOOK_URL": {
        "required": true
      },
      "WEBHOOK_CONCURRENT_CALLS": {
        "description": "The maximum concurrent calls that will be made to your webhook",
        "default": 5
      }
    }
  },
  {
    "title": "Auth0 AD/LDAP Connector Health Monitor",
    "name": "auth0-ldap-conector-health-monitor",
    "version": "1.0.2",
    "author": "auth0",
    "description": "This extension will expose an endpoint you can use from your monitoring tool to monitor your AD/LDAP Connectors",
    "type": "application",
    "category": "admin",
    "repository": "https://github.com/auth0/auth0-ldap-conector-health-monitor",
    "docsUrl": "https://auth0.com/docs/extensions/adldap-connector",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-ldap-conector-health-monitor/assets/logo.svg",
    "keywords": [
      "auth0",
      "extension"
    ],
    "secrets": {
      "AUTH0_DOMAIN": {
        "description": "Auth0 domain"
      },
      "AUTH0_GLOBAL_CLIENT_ID": {
        "description": "Auth0 global ClientID"
      },
      "AUTH0_GLOBAL_CLIENT_SECRET": {
        "description": "Auth0 global ClientSecret"
      }
    }
  },
  {
    "title": "Auth0 Logs to Application Insights",
    "name": "auth0-logs-to-application-insights",
    "version": "1.3.0",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Application Insights",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-application-insights",
    "docsUrl": "https://auth0.com/docs/extensions/application-insight",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-application-insights/assets/logo.svg",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "*/5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "APPINSIGHTS_INSTRUMENTATIONKEY": {
        "description": "Application Insights instrumentationKey",
        "required": true
      }
    }
  },
  {
    "title": "Auth0 Logs to Azure Blob Storage",
    "name": "auth0-logs-to-azure-blob-storage",
    "version": "1.3.0",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Azure Blob Storage",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-azure-blob-storage",
    "docsUrl": "https://auth0.com/docs/extensions/azure-blob-storage",
    "keywords": [
      "auth0",
      "extension"
    ],
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-azure-blob-storage/assets/logo.svg",
    "schedule": "*/5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "STORAGE_ACCOUNT_NAME": {
        "description": "Azure Storage AccountName",
        "required": true
      },
      "STORAGE_ACCOUNT_KEY": {
        "description": "Azure Storage AccountKey",
        "required": true
      },
      "STORAGE_CONTAINER_NAME": {
        "description": "Azure Storage ContainerName",
        "required": true
      }
    }
  },
  {
    "title": "Auth0 Authentication API webhooks",
    "name": "auth0-authentication-api-webhooks",
    "version": "1.4.0",
    "author": "auth0",
    "description": "Allows you to define webhooks for Auth0's Authentication API. It will go through the audit logs and call a webhook for specific events.",
    "type": "cron",
    "category": "webhook",
    "repository": "https://github.com/auth0/auth0-authentication-api-webhooks",
    "docsUrl": "https://auth0.com/docs/extensions/authentication-api-webhooks",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-authentication-api-webhooks/assets/logo.svg",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "*/5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "WEBHOOK_URL": {
        "required": true
      },
      "WEBHOOK_CONCURRENT_CALLS": {
        "description": "The maximum concurrent calls that will be made to your webhook",
        "default": 5
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": "All events"
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "pwd_leak",
            "text": "Leaked credentials detected (Critical)"
          }
        ]
      }
    }
  },
  {
    "title": "Auth0 Logs to Loggly",
    "name": "auth0-logs-to-loggly",
    "version": "1.4.0",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Loggly",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-loggly",
    "docsUrl": "https://auth0.com/docs/extensions/loggly",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-loggly/assets/logo.svg",
    "keywords": [
      "auth0",
      "extension"
    ],
    "auth0": {
      "scopes": "read:logs"
    },
    "schedule": "0 */5 * * * *",
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "LOGGLY_CUSTOMER_TOKEN": {
        "description": "Loggly customer token",
        "required": true,
        "type": "password"
      },
      "LOGGLY_SUBDOMAIN": {
        "description": "Loggly subdomain"
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "Auth0 Logs to Papertrail",
    "name": "auth0-logs-to-papertrail",
    "version": "1.4.0",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Papertrail",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-papertrail",
    "docsUrl": "https://auth0.com/docs/extensions/papertrail",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-papertrail/assets/logo.png",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "*/5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "PAPERTRAIL_HOST": {
        "description": "Papertrail Host",
        "required": true
      },
      "PAPERTRAIL_PORT": {
        "description": "Papertrail Port",
        "required": true
      },
      "PAPERTRAIL_SYSTEM": {
        "description": "Papertrail System",
        "default": "auth0-logs"
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "User Import / Export",
    "name": "auth0-user-import-export",
    "version": "1.6.2",
    "author": "auth0",
    "useHashName": false,
    "description": "This extension allows you to import/export users from/to your account.",
    "type": "application",
    "category": "admin",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-user-import-export/assets/logo.svg",
    "initialUrlPath": "/login",
    "repository": "https://github.com/auth0/auth0-user-import-export-extension",
    "docsUrl": "https://auth0.com/docs/extensions/user-import-export",
    "keywords": [
      "auth0",
      "extension"
    ],
    "auth0": {
      "scopes": "create:users read:users read:connections"
    }
  },
  {
    "title": "Auth0 Logs to Sumo Logic",
    "name": "auth0-logs-to-sumologic",
    "version": "1.3.3",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Sumo Logic",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-sumologic",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-sumologic/assets/logo.png",
    "docsUrl": "https://auth0.com/docs/extensions/sumologic",
    "keywords": [
      "auth0",
      "extension"
    ],
    "auth0": {
      "scopes": "read:logs"
    },
    "schedule": "0 */5 * * * *",
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "SUMOLOGIC_URL": {
        "description": "Sumo Logic URL - this is your Sumo Logic HTTP Collector Endpoint",
        "required": true
      },
      "START_FROM": {
        "description": "The Auth0 LogId from where you want to start. This will only be used on first run."
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "Auth0 Logs to Splunk",
    "name": "auth0-logs-to-splunk",
    "version": "1.2.3",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Splunk",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-splunk",
    "docsUrl": "https://auth0.com/docs/extensions/splunk",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-splunk/assets/logo.png",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "0 */5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "SPLUNK_URL": {
        "description": "Splunk URL - this is your Splunk Cloud URL",
        "required": true
      },
      "SPLUNK_TOKEN": {
        "description": "Splunk Token - this is your Splunk Token",
        "required": true,
        "type": "password"
      },
      "SPLUNK_COLLECTOR_PORT": {
        "description": "HTTP Collector Port",
        "required": true,
        "default": 8088
      },
      "SPLUNK_COLLECTOR_PATH": {
        "description": "HTTP Collector Path (Endpoint)",
        "required": false,
        "default": "/services/collector/event/1.0"
      },
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "START_FROM": {
        "description": "The Auth0 LogId from where you want to start. This will only be used on first run."
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "Auth0 Logs to Logstash",
    "name": "auth0-logs-to-logstash",
    "version": "1.4.2",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Logstash",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-logstash",
    "docsUrl": "https://auth0.com/docs/extensions/logstash",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-logstash/assets/logo.png",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "0 */5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "START_FROM": {
        "description": "The Auth0 LogId from where you want to start. This will only be used on first run."
      },
      "LOGSTASH_URL": {
        "description": "Logstash URL (as defined for use with logstash-input-http plugin)",
        "required": true
      },
      "LOGSTASH_INDEX": {
        "description": "Logstash Index (as defined in logstash setup",
        "required": true
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "Auth0 Logs to Mixpanel",
    "name": "auth0-logs-to-mixpanel",
    "version": "1.4.0",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Mixpanel",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-mixpanel",
    "docsUrl": "https://auth0.com/docs/extensions/mixpanel",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-mixpanel/assets/logo.png",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "0 */5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "MIXPANEL_TOKEN": {
        "description": "Mixpanel Token - this is your Mixpanel Token for your mixpanel project",
        "required": true
      },
      "MIXPANEL_KEY": {
        "description": "Mixpanel Key - this is your Mixpanel Key for your mixpanel project",
        "required": true,
        "type": "password"
      },
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "Real-time Webtask Logs",
    "name": "auth0-extension-realtime-logs",
    "version": "1.1.2",
    "author": "auth0",
    "description": "Access real-time webtask logs",
    "type": "application",
    "category": "admin",
    "repository": "https://github.com/auth0/auth0-extension-realtime-logs",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-extension-realtime-logs/assets/logo.svg",
    "docsUrl": "https://auth0.com/docs/extensions/realtime-webtask-logs",
    "keywords": [
      "auth0",
      "extension",
      "webtask",
      "logs",
      "real-time"
    ]
  },
  {
    "title": "Auth0 Logs to Logentries",
    "name": "auth0-logs-to-logentries",
    "version": "1.4.0",
    "author": "auth0",
    "description": "This extension will take all of your Auth0 logs and export them to Logentries",
    "type": "cron",
    "category": "log_export",
    "repository": "https://github.com/auth0/auth0-logs-to-logentries",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-logs-to-logentries/assets/logo.svg",
    "docsUrl": "https://auth0.com/docs/extensions/logentries",
    "keywords": [
      "auth0",
      "extension"
    ],
    "schedule": "0 */5 * * * *",
    "auth0": {
      "scopes": "read:logs"
    },
    "secrets": {
      "BATCH_SIZE": {
        "description": "The amount of logs to be read on each execution. Maximum is 100.",
        "default": 100
      },
      "LOGENTRIES_TOKEN": {
        "description": "Logentries Token",
        "required": true
      },
      "LOG_LEVEL": {
        "description": "This allows you to specify the log level of events that need to be sent",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "0",
            "text": "Debug"
          },
          {
            "value": "1",
            "text": "Info"
          },
          {
            "value": "2",
            "text": "Warning"
          },
          {
            "value": "3",
            "text": "Error"
          },
          {
            "value": "4",
            "text": "Critical"
          }
        ]
      },
      "LOG_TYPES": {
        "description": "If you only want to send events with a specific type (eg: failed logins)",
        "type": "select",
        "allowMultiple": true,
        "options": [
          {
            "value": "-",
            "text": ""
          },
          {
            "value": "s",
            "text": "Success Login (Info)"
          },
          {
            "value": "seacft",
            "text": "Success Exchange (Info)"
          },
          {
            "value": "feacft",
            "text": "Failed Exchange (Error)"
          },
          {
            "value": "f",
            "text": "Failed Login (Error)"
          },
          {
            "value": "w",
            "text": "Warnings During Login (Warning)"
          },
          {
            "value": "du",
            "text": "Deleted User (Info)"
          },
          {
            "value": "fu",
            "text": "Failed Login (invalid email/username) (Error)"
          },
          {
            "value": "fp",
            "text": "Failed Login (wrong password) (Error)"
          },
          {
            "value": "fc",
            "text": "Failed by Connector (Error)"
          },
          {
            "value": "fco",
            "text": "Failed by CORS (Error)"
          },
          {
            "value": "con",
            "text": "Connector Online (Info)"
          },
          {
            "value": "coff",
            "text": "Connector Offline (Error)"
          },
          {
            "value": "fcpro",
            "text": "Failed Connector Provisioning (Critical)"
          },
          {
            "value": "ss",
            "text": "Success Signup (Info)"
          },
          {
            "value": "fs",
            "text": "Failed Signup (Error)"
          },
          {
            "value": "cs",
            "text": "Code Sent (Debug)"
          },
          {
            "value": "cls",
            "text": "Code/Link Sent (Debug)"
          },
          {
            "value": "sv",
            "text": "Success Verification Email (Debug)"
          },
          {
            "value": "fv",
            "text": "Failed Verification Email (Debug)"
          },
          {
            "value": "scp",
            "text": "Success Change Password (Info)"
          },
          {
            "value": "fcp",
            "text": "Failed Change Password (Error)"
          },
          {
            "value": "sce",
            "text": "Success Change Email (Info)"
          },
          {
            "value": "fce",
            "text": "Failed Change Email (Error)"
          },
          {
            "value": "scu",
            "text": "Success Change Username (Info)"
          },
          {
            "value": "fcu",
            "text": "Failed Change Username (Error)"
          },
          {
            "value": "scpn",
            "text": "Success Change Phone Number (Info)"
          },
          {
            "value": "fcpn",
            "text": "Failed Change Phone Number (Error)"
          },
          {
            "value": "svr",
            "text": "Success Verification Email Request (Debug)"
          },
          {
            "value": "fvr",
            "text": "Failed Verification Email Request (Error)"
          },
          {
            "value": "scpr",
            "text": "Success Change Password Request (Debug)"
          },
          {
            "value": "fcpr",
            "text": "Failed Change Password Request (Error)"
          },
          {
            "value": "fn",
            "text": "Failed Sending Notification (Error)"
          },
          {
            "value": "limit_wc",
            "text": "Blocked Account (Critical)"
          },
          {
            "value": "limit_ui",
            "text": "Too Many Calls to /userinfo (Critical)"
          },
          {
            "value": "api_limit",
            "text": "Rate Limit On API (Critical)"
          },
          {
            "value": "sdu",
            "text": "Successful User Deletion (Info)"
          },
          {
            "value": "fdu",
            "text": "Failed User Deletion (Error)"
          },
          {
            "value": "gd_unenroll",
            "text": "When a device account is deleted"
          },
          {
            "value": "gd_update_device_account",
            "text": "When a device account is updated"
          },
          {
            "value": "gd_send_pn",
            "text": "When a push notification is sent"
          },
          {
            "value": "gd_send_sms",
            "text": "When a SMS is sent"
          },
          {
            "value": "gd_start_auth",
            "text": "Start second factor authentication"
          },
          {
            "value": "gd_start_enroll",
            "text": "Second factor auth enrollment is started"
          },
          {
            "value": "gd_module_switch",
            "text": "When changing feature config"
          },
          {
            "value": "gd_tenant_update",
            "text": "When tenant info has been updated"
          },
          {
            "value": "gd_user_delete",
            "text": "When calling (user delete => unenroll)"
          },
          {
            "value": "gd_auth_failed",
            "text": "When second factor login has failed"
          },
          {
            "value": "gd_auth_succeed",
            "text": "When second factor authentication has succeeded"
          },
          {
            "value": "gd_recovery_succeed",
            "text": "Recovery succeeded"
          },
          {
            "value": "gd_recovery_failed",
            "text": "Failed recovery"
          },
          {
            "value": "gd_otp_rate_limit_exceed",
            "text": "When One Time Password fails validation because rate limit is exceeded"
          },
          {
            "value": "gd_recovery_rate_limit_exceed",
            "text": "When recovery validation fails because rate limit is exceeded"
          }
        ]
      }
    }
  },
  {
    "title": "Bitbucket Deployments",
    "name": "auth0-bitbucket-deploy",
    "version": "2.0.1",
    "author": "auth0",
    "description": "This extension gives Auth0 customers the possibility to deploy Hosted Pages, Rules and Custom Database Connections from Bitbucket.",
    "type": "application",
    "category": "source_control",
    "docsUrl": "https://auth0.com/docs/extensions/bitbucket-deploy",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-bitbucket-deploy/assets/logo.svg",
    "initialUrlPath": "/login",
    "uninstallConfirmMessage": "Do you really want to uninstall this extension? Doing so will stop any Hosted Pages, Rules and Database Connection scripts from being deployed from Bitbucket to Auth0",
    "repository": "https://github.com/auth0-extensions/auth0-bitbucket-deploy",
    "keywords": [
      "auth0",
      "extension",
      "bitbucket"
    ],
    "auth0": {
      "createClient": true,
      "onUninstallPath": "/.extensions/on-uninstall",
      "scopes": "read:tenant_settings update:tenant_settings update:clients read:clients read:connections update:connections read:rules create:rules update:rules delete:rules delete:clients"
    },
    "secrets": {
      "BITBUCKET_REPOSITORY": {
        "example": "myorganization/myrepo",
        "description": "The repository from which you want to deploy rules and database scripts",
        "required": true
      },
      "BITBUCKET_BRANCH": {
        "description": "The branch we should monitor for commits",
        "default": "master",
        "required": true
      },
      "BITBUCKET_USER": {
        "description": "Bitbucket account",
        "required": true
      },
      "BITBUCKET_PASSWORD": {
        "description": "Bitbucket password",
        "type": "password",
        "required": true
      },
      "SLACK_INCOMING_WEBHOOK_URL": {
        "example": "https://hooks.slack.com/services/...",
        "description": "Webhook URL for Slack used to notify you of successful and failed deployments",
        "required": false
      }
    }
  },
  {
    "title": "Delegated Administration Dashboard",
    "name": "auth0-delegated-admin",
    "version": "2.3.0",
    "author": "auth0",
    "useHashName": false,
    "description": "This extension allows non-dashboard administrators to manage (a subset of) users.",
    "type": "application",
    "category": "end_user",
    "logoUrl": "https://cdn.auth0.com/extensions/auth0-delegated-admin/assets/logo.svg",
    "initialUrlPath": "/",
    "docsUrl": "https://auth0.com/docs/extensions/delegated-admin",
    "repository": "https://github.com/auth0-extensions/auth0-delegated-administration-extension",
    "keywords": [
      "auth0",
      "extension"
    ],
    "auth0": {
      "createClient": true,
      "onUninstallPath": "/.extensions/on-uninstall",
      "scopes": "read:clients delete:clients read:connections read:users update:users delete:users create:users read:logs read:device_credentials update:device_credentials delete:device_credentials"
    },
    "secrets": {
      "EXTENSION_CLIENT_ID": {
        "description": "Client ID of the application you created in the Auth0 Dashboard",
        "required": true
      },
      "TITLE": {
        "description": "Custom title for the dashboard",
        "example": "Fabrikam User Management",
        "required": false
      },
      "CUSTOM_CSS": {
        "description": "A CSS file containing custom styles for the extension",
        "example": "https://cdn.fabrikam.com/static/extensions/theme/fabrikam.css",
        "required": false
      }
    }
  }
]
